extends layout.home

block title
	meta(name="description", content="Powerful asynchronous I/O and web toolkit for D, providing a fiber based blocking programming model and an efficient API.")

block vibed.plainbody
	h1(style="display: none;") vibe.d

	a#forkme(href="https://github.com/rejectedsoftware/vibe.d")
		img(src="images/github-banner.png",alt="fork vibe.d on github",style="position:absolute; top: 0; right: 0;")
	p#slogan Asynchronous I/O that doesn’t get in your way, written in
		a(href="http://dlang.org", target="_blank") D

	.bs-columns3
		#feat-rad.feat-block.bs-col
			h2 Productive
			ul
				li High-level declarative <em>REST</em> and <em>web application framework</em>
				li Full <em>HTTP(S)</em> stack with client, server and proxy implementations
				li Shipped with native database drivers for <em>MongoDB</em> and <em>Redis</em>
				li Complete <em>concurrency toolkit</em> and support for <em>low level I/O operations</em>
				li
					a(href="features#productivity") Read more…
		#feat-fast.feat-block.bs-col
			h2 Fast
			ul
				li <em>Asynchronous I/O</em> for maximum speed and minimum memory usage
				li <em>Compile-time "Diet" templates</em> for unparalleled dynamic page speed
				li Compiled to <em>native machine code</em>
				li <em>Multi-threading</em> and integrated <em>load-balancing*</em>
				li
					a(href='features#performance') Read more…
		#feat-simple.feat-block.bs-col
			h2 Simple
			ul
				li <em>Fiber based</em> blocking programming model for concise and intuitive development
				li <em>Compact API</em> with sensible default choices
				//-li <em>Zero-downtime changes*</em> allowing safe development on live-systems
				li Full support for <em>exception based</em> error handling
				li Simple access to third-party <em>extension libraries</em> using the DUB package system
				li
					a(href="features#simplicity") Read more…
	.bs-columns3.bs-separator
		nav#global-nav.bs-col
			h2 Jump to…
			ul.bs-global
				li.nav-features
					a(href="features").title Features
					p View a list of all features explaining how they work and what makes them special
				li.nav-docs
					a(href="docs").title Documentation
					p Development documentation including the full <a href="/api/">API reference</a>
				li.nav-tutorials
					a(href="tutorials").title Tutorials
					p Quick overviews and step-by-step instructions
				li.nav-community
					a(href="community").title Community
					p Places to <a href="http://forum.rejectedsoftware.com/">get help</a>, <a href="https://github.com/rejectedsoftware/vibe.d/issues">report bugs</a>, and <a href="http://forum.rejectedsoftware.com/groups/rejectedsoftware.vibed/">discuss vibe.d</a> in general
				li.nav-developer
					a(href="get-involved").title Get involved
					p Support vibe.d through bug reports, code contributions or donations
				li.nav-download
					a(href="download").title Download
					p Get the latest release and accompanying material
				li.nav-blog
					a(href="blog/").title News
					p Follow the development of vibe.d and stay up to date with news and events
				li.nav-about
					a(href="about").title About
					p All about the project's motivation, goals and the creators

		#featured-section.bs-col
			h2 Featured

			img(src="#{req.rootDir}images/d-web-development-book-200.png", width=104, height=128)

			h3 D Web Development
			h4 by Kai "redstar" Nacke

			p This book gives a thorough introduction to web development in D, using vibe.d. While walking through the various topics, it always provides practical step-by-step examples and explains the underlying mechanisms.

			p Will be available as e-book and print versions at <a href="https://www.packtpub.com/web-development/d-web-development">Packt Publishing</a>


		#news-section.bs-col
			h2 Latest News
			include vibelog.inc.headlinelist
			- VibelogHeadlineListConfig vcfg = {maxPosts: 6, footerLinks : false, showSummaries : false, headerLevel : 3};
			- insertVibelogHeadlineList(vcfg);

	section.bs-separator
		h2 Example of a simple HTTP server

		pre.code
			|<span class="kwd">import</span><span class="pln"> vibe</span><span class="pun">.</span><span class="pln">d</span><span class="pun">;</span><span class="pln">
			|
			|</span><span class="kwd">shared</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">()</span><span class="pln">
			|</span><span class="pun">{</span><span class="pln">
			|	</span><span class="kwd">auto</span><span class="pln"> settings </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">HTTPServerSettings</span><span class="pun">;</span><span class="pln">
			|	settings</span><span class="pun">.</span><span class="pln">port </span><span class="pun">=</span><span class="pln"> </span><span class="lit">8080</span><span class="pun">;</span><span class="pln">
			|
			|	listenHTTP</span><span class="pun">(</span><span class="pln">settings</span><span class="pun">,</span><span class="pln"> </span><span class="pun">&amp;</span><span class="pln">handleRequest</span><span class="pun">);</span><span class="pln">
			|</span><span class="pun">}</span><span class="pln">
			|
			|</span><span class="kwd">void</span><span class="pln"> handleRequest</span><span class="pun">(</span><span class="typ">HTTPServerRequest</span><span class="pln"> req</span><span class="pun">,</span><span class="pln">
			|                   </span><span class="typ">HTTPServerResponse</span><span class="pln"> res</span><span class="pun">)</span><span class="pln">
			|</span><span class="pun">{</span><span class="pln">
			|	</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">req</span><span class="pun">.</span><span class="pln">path </span><span class="pun">==</span><span class="pln"> </span><span class="str">"/"</span><span class="pun">)</span><span class="pln">
			|		res</span><span class="pun">.</span><span class="pln">writeBody</span><span class="pun">(</span><span class="str">"Hello, World!"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"text/plain"</span><span class="pun">);</span><span class="pln">
			|</span><span class="pun">}</span>

		//- pre.code.prettyprint.lang-d
			|import vibe.d;
			|
			|shared static this()
			|{
			|	auto settings = new HTTPServerSettings;
			|	settings.port = 8080;
			|
			|	listenHTTP(settings, &amp;handleRequest);
			|}
			|
			|void handleRequest(HTTPServerRequest req,
			|                   HTTPServerResponse res)
			|{
			|	if (req.path == "/")
			|		res.writeBody("Hello, World!", "text/plain");
			|}

	section.bs-separator
		h2 Example of an echo server

		pre.code
			|<span class="kwd">import</span><span class="pln"> vibe</span><span class="pun">.</span><span class="pln">d</span><span class="pun">;</span><span class="pln">
			|
			|</span><span class="kwd">shared</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">()</span><span class="pln">
			|</span><span class="pun">{</span><span class="pln">
			|	listenTCP</span><span class="pun">(</span><span class="lit">7</span><span class="pun">,</span><span class="pln"> </span><span class="pun">(</span><span class="pln">conn</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> conn</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="pln">conn</span><span class="pun">);</span><span class="pln"> </span><span class="pun">});</span><span class="pln">
			|</span><span class="pun">}</span>

		//- pre.code.prettyprint.lang-d
			|import vibe.d;
			|
			|shared static this()
			|{
			|	listenTCP(7, (conn) { conn.write(conn); });
			|}

	section
		p * Still work-in-progress, implemented by the <a target="_blank" class="extern" hreF="https://github.com/rejectedsoftware/vibedist">vibedist</a> project.
